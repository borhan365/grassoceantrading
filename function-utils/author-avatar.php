<?php


// avatar
function custom_user_profile_fields($user) {
    // Retrieve existing custom avatar URL if available
    $custom_avatar = get_the_author_meta('custom_avatar', $user->ID);
    ?>
    <h3><?php _e("Custom Avatar", "textdomain"); ?></h3>

    <table class="form-table">
        <tr>
            <th><label for="custom_avatar"><?php _e("Custom Avatar URL"); ?></label></th>
            <td>
                <input type="text" name="custom_avatar" id="custom_avatar" value="<?php echo esc_attr($custom_avatar); ?>" class="regular-text" /><br />
                <!-- Preview Area -->
                <img id="custom_avatar_preview" src="<?php echo esc_url($custom_avatar); ?>" alt="Avatar Preview" style="width: 100px; height: 100px; display: <?php echo ($custom_avatar ? 'block' : 'none'); ?>;">
                <br>
                <input type="file" name="custom_avatar_file" id="custom_avatar_file" /><br />
                <span class="description"><?php _e("Upload a custom avatar."); ?></span>
            </td>
        </tr>
    </table>

    <script type="text/javascript">
    document.getElementById('custom_avatar_file').addEventListener('change', function(e) {
        if (e.target.files && e.target.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('custom_avatar_preview').src = e.target.result;
                document.getElementById('custom_avatar_preview').style.display = 'block';
            };
            reader.readAsDataURL(e.target.files[0]);
        }
    });
    </script>
    <?php
}
add_action('show_user_profile', 'custom_user_profile_fields');
add_action('edit_user_profile', 'custom_user_profile_fields');


function custom_user_profile_fields_save($user_id) {
    if (!current_user_can('edit_user', $user_id)) {
        return false;
    }

    if (!function_exists('wp_handle_upload')) {
        require_once(ABSPATH . 'wp-admin/includes/file.php');
    }

    // Handle the file upload
    $uploadedfile = $_FILES['custom_avatar_file'];
    if ($uploadedfile['size'] > 0) {
        $upload_overrides = array('test_form' => false);
        $movefile = wp_handle_upload($uploadedfile, $upload_overrides);

        if ($movefile && !isset($movefile['error'])) {
            // File is valid and was successfully uploaded, save URL to user meta
            update_user_meta($user_id, 'custom_avatar', $movefile['url']);
        } else {
            /**
             * Error generated by _wp_handle_upload()
             * @see _wp_handle_upload() in wp-admin/includes/file.php
             */
            echo $movefile['error'];
        }
    }
}
add_action('personal_options_update', 'custom_user_profile_fields_save');
add_action('edit_user_profile_update', 'custom_user_profile_fields_save');

function custom_user_profile_multipart_form() {
    echo 'enctype="multipart/form-data"';
}
add_action('user_edit_form_tag', 'custom_user_profile_multipart_form');

function change_default_avatar($avatar, $id_or_email, $size, $default, $alt) {
    $user = false;

    if (is_numeric($id_or_email)) {
        $id = (int) $id_or_email;
        $user = get_user_by('id', $id);
    } elseif (is_object($id_or_email)) {
        if (!empty($id_or_email->user_id)) {
            $id = (int) $id_or_email->user_id;
            $user = get_user_by('id', $id);
        }
    } else {
        $user = get_user_by('email', $id_or_email);
    }

    if ($user && is_object($user)) {
        $custom_avatar = get_the_author_meta('custom_avatar', $user->ID);
        if ($custom_avatar) {
            $avatar = "<img alt='{$alt}' src='{$custom_avatar}' class='avatar avatar-{$size} photo' height='{$size}' width='{$size}' />";
        }
    }

    return $avatar;
}
add_filter('get_avatar', 'change_default_avatar', 10, 5);


?>